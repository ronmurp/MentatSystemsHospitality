@using Msh.Admin.Models.Const
@using Msh.WebApp.Areas.Admin.Models
@{
	var title = "Extra Dates List";
	ViewData["Title"] = title;
	var itemCode = ViewBag.Code as string;
	var hotelCode = ViewBag.HotelCode as string;
}

@await Component.InvokeAsync("AdminMenu", new { menuName = AdminConst.MenuHotels, currentItem = "ExtrasList" })

@await Html.PartialAsync("_HotelCodeHiddenFields", new HotelCodeHiddenFieldsVm
{
	UseHotel = true,
	HotelCode = @hotelCode,
	Code = itemCode,
	EditType = "item-dates"
})

<div class="text-center">
	<h1 class="display-6">@title for @itemCode in @hotelCode</h1>
	<p>For more information click <info-icon name="info-extra-dates" /></p>
</div>

<div class="row">
	<div class="col-12" id="table-target">
	
	</div>
</div>


@await Html.PartialAsync("_SaveReturnButtons", new SaveReturnButtonsVm
{
	ReturnUrl = "/Admin/Hotels/ExtrasList?hotelCode={hotelCode}&code={itemCode}",
	ReturnText = ConstReturnText.ReturnToList,
	SaveOperation = "#save-dates"
})


@section InfoItems {

	<div data-info-for="info-extra-dates">
		<span>Extra Dates</span>
		<div>
			<p>A set of date ranges used to prohibit or allow Extras.</p>
			<p>Prohibit date ranges might be used for items that are generally available but occasionally are not.</p>
			<p>Allow date ranges might be used for items that are seasonal and available for a short time.</p>
			<p>If no dates are supplied the extra will be available all the time, though that may also be determined by Opera.</p>
			<p>Editing the date list: <info-icon name="info-date-range-list"/></p>
		</div>
	</div>

	@await Html.PartialAsync("Admin/_AdminDatesList")
}

@section Scripts {
	<script src="~/js/mshapp/msh-ApiService.js"></script>
	<script src="~/js/mshapp/mshapp.js"></script>
	<script src="~/js/mshapp/msh-itemdatesservice.js"></script>
	<script src="~/js/admin/hotels/msh-admin-extras.js"></script>
}


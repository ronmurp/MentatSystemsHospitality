@using Microsoft.AspNetCore.Mvc.TagHelpers
@using Msh.WebApp.TagHelpers

@model Msh.HotelCache.Models.Hotels.Hotel;
@{
	var title = "Hotels";
    ViewData["Title"] = title;

	await Html.RenderPartialAsync("Admin/Menus/_AdminMenuHotels", "Hotels");
}

<div class="text-center">
	<h1 class="display-4">@title</h1>
	<p></p>
</div>

@{
	await Html.RenderPartialAsync("Admin/Hotels/_HotelEdit", @Model);
}
<div class="row">
	<div class="col-12">
		<button id="get-hotel" class="btn btn-primary" onclick="window.mshMethods.getFormData()">Get Hotel</button>
	</div>
</div>
<div id="page-info" style="display:none;">

	<div data-info-for="info-user-id">
		<span>User ID</span>
		<div>
			<p>One of the unique fields that is used to send to Coin Corner as part of the data that identifies the ELH account.</p>
		</div>
	</div>
	
	<div data-info-for="info-public-key">
		<span>Public Key</span>
		<div>
			<p>One of the unique fields that is used to send to Coin Corner as part of the data that identifies the ELH account.</p>
		</div>
	</div>
	
	<div data-info-for="info-secret-source">
		<span>Secret Source</span>
		<div>
			<p>
				The Coin Corner API requires a secret key be sent with each API call.
				The secret should not be stored in the application source code. 
			</p>
			<p>Where is the secret stored?</p>
			<ul>
				<li>Config - Directly in the config</li>
				<li>Env - In an environment variable (as in name)</li>
				<li>Azure - In Azure</li>
			</ul>
		</div>
	</div>
	
	<div data-info-for="info-secret-target">
		<span>Environment Variable Target</span>
		<div>
			<p>If the secret is stored in an Environment Variable, this determines the target.</p>
		</div>
	</div>
	
	<div data-info-for="info-secret-name">
		<span>Environment Variable Name</span>
		<div>
			<p>
				This is the name of the Environment Variable, used if the secret is stored in an Environment Variable.
				If stored in Azure, this will identify the location.
			</p>
		</div>
	</div>
	
	<div data-info-for="info-secret">
		<span>The Secret</span>
		<div>
			<p>
				The Coin Corner API requires a secret key be sent with each API call.
				The secret should not be stored in the application source code.
				This should be empty if the secret is stored elsewhere - as determined by the other Secret configuration values.
			</p>
		</div>
	</div>
	
	<div data-info-for="info-checkout-url">
		<span>Checkout URL</span>
		<div>
			<p></p>
		</div>
	</div>
	
	<div data-info-for="info-success-url">
		<span>Success Redirect URL</span>
		<div>
			<p></p>
		</div>
	</div>
	
	<div data-info-for="info-fail-url">
		<span>Fail Redirect URL</span>
		<div>
			<p></p>
		</div>
	</div>
	
	<div data-info-for="info-notify-url">
		<span>Notify URL</span>
		<div>
			<p>
				When the status of a transaction occurs in Coin Corner, this address will be used to 
				notify our booking system that a state change has occurred. The booking system should then perform a status
				check to get the actual status.
			</p>
			<p>
				Refer to the <a href="https://checkout.coincorner.com/Help/WebHook" target="_blank">WebHook</a> information from Coin Corner.
			</p>
		</div>
	</div>
	
	<div data-info-for="info-logfile">
		<span>Logfile Path</span>
		<div>
			<p>
				If logging of API calls is enabled (Log Enabled), this is the path to the file system where these logs are stored.
				You will need to understand the way logs are stored to determine this value.
			</p>
		</div>
	</div>
	
	<div data-info-for="info-log-enabled">
		<span>Log Enabled</span>
		<div>
			<p>Set this to enable the logging of Coin Corner API records (as json files)</p>
		</div>
	</div>
	
	@{
		await Html.RenderPartialAsync("Admin/_AdminPublish", "Coin Corner Config");
	}
	
</div>

@section Scripts {
	<script src="~/js/mshapp/msh-apiservice.js"></script>
	<script src="~/js/mshapp/mshapp.js"></script>
	<script src="~/js/admin/hotels/msh-admin-hotels.js"></script>
}
